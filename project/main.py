# -*- coding: utf-8 -*-
# !/usr/bin/python3.9
import random
import requests
from datetime import datetime
from datetime import time
import sqlite3
import os
import config
import telebot
from telebot import types

token_number = int(os.environ.get('TOK_NUM'))
# print('TOK_NUM', token_number)

bot = telebot.TeleBot(config.TOKEN[token_number])


admin_max = config.ADMIN_MAX
admin_alina = config.ADMIN_ALINA
admin_vova = config.ADMIN_VOVA
ev = config.EV
am201 = config.SPISOK201
am202 = config.SPISOK202

location = '–û–¥–µ—Å—Å–∞'
complete_api_link = "https://api.openweathermap.org/data/2.5/weather?q=odessa&appid=5cbeda47b8c5859f4bece2e13a11b5ba"
api_link = requests.get(complete_api_link)
api_data = api_link.json()

temp_city = ((api_data['main']['temp']) - 273.15)
weather_desc = api_data['weather'][0]['description']
hmdt = api_data['main']['humidity']
wind_spd = api_data['wind']['speed']
date_time = datetime.now().strftime("%d %b %Y | %I:%M:%S %p")

print("-------------------------------------------------------------")
print("–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –æ–¥–µ—Å—Å–∞ - {}  || {}".format(location.upper(), date_time))
print("-------------------------------------------------------------")

print("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞       : {: .0f} ¬∞C".format(temp_city))
print("–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã  :", weather_desc)
print("–í–ª–∞–∂–Ω–æ—Å—Ç—å         :", hmdt, '%')
print("–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞    :", wind_spd, '–∫–º/—á')

today = datetime.today()
week = today.strftime("%U")

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("üìö–ü–∞—Ä—ãüìö")
item2 = types.KeyboardButton("üñ•–î/–óüñ•")
item3 = types.KeyboardButton("‚åõ–ó–≤–æ–Ω–∫–∏‚åõ")
item = types.KeyboardButton("‚ùó–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏‚ùó")
item5 = types.KeyboardButton("üìÑ–õ–∞–±—ãüìÑ")
item4 = types.KeyboardButton("–î–ê–õ–ï–ï‚û°")

markup.add(item1, item2, item3, item, item5, item4)

markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ê–ú-201")
item2 = types.KeyboardButton("–ê–ú-202")
item3 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup2.add(item1, item2, item3)

markup3 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ü–ù")
item2 = types.KeyboardButton("–í–¢")
item3 = types.KeyboardButton("–°–†")
item4 = types.KeyboardButton("–ß–¢")
item5 = types.KeyboardButton("–ü–¢")
item6 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup3.add(item1, item2, item3, item4, item5, item6)

markup4 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup4.add(item1)

markup5 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏")
item2 = types.KeyboardButton("–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤")
item3 = types.KeyboardButton("–°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ")
item4 = types.KeyboardButton("–¢–û–≠")
item5 = types.KeyboardButton("–£–∫—Ä. —è–∑—ã–∫")
item6 = types.KeyboardButton("–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è")
item7 = types.KeyboardButton("–§–∏–∑—Ä–∞")
item8 = types.KeyboardButton("–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
item10 = types.KeyboardButton("–ö–æ–º–ø. –ª–æ–≥–∏–∫–∞")
item9 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup5.add(item1, item2, item3, item4, item5, item6, item7, item8, item10, item9)

markup6 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("üé≤–ù–∞–π—Ç–∏ –∂–µ—Ä—Ç–≤—Éüé≤")
item2 = types.KeyboardButton("üôé‚Äç‚ôÇ–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤üôç‚Äç‚ôÄ")
# item3 = types.KeyboardButton("üíº–ò–Ω—Ñ–∞ –æ –ø—Ä–µ–ø–æ–¥–∞—Öüíº")
item3 = types.KeyboardButton("üì®–†–æ–∑—Å—ã–ª–∫–∞üì®")
item4 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
item5 = types.KeyboardButton("üë•–û–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—åüë•")
item = types.KeyboardButton("‚òÄ–ü–æ–≥–æ–¥–∞‚òÄ")
ite = types.KeyboardButton("üê∂–ë–ï–ùüê∂")
markup6.add(item1, item2, item3, item4, item5, item, ite)

markup7 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 201")
item = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup7.add(item1, item)

markup8 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ê–ú201")
item2 = types.KeyboardButton("–ê–ú202")
item3 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup8.add(item1, item2, item3)

markup9 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 202")
item = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup9.add(item1, item)

markup10 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("201")
item2 = types.KeyboardButton("202")
item3 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup10.add(item1, item2, item3)

markup11 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item2 = types.KeyboardButton("–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å")
markup11.add(item2)


markup13 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–û–¢–ü–†–ê–í–ò–¢–¨")
item2 = types.KeyboardButton("–ù–ï –û–¢–ü–†–ê–í–õ–Ø–¢–¨")
markup13.add(item, item2)


markup14 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–ì–û–¢–û–í")
item2 = types.KeyboardButton("–ù–ï –ì–û–¢–û–í")
item3 = types.KeyboardButton("–ì–ï–ù–ï–†–ò–†–û–í–ê–¢–¨ –°–ü–ò–°–û–ö")
markup14.add(item, item2, item3)


markup15 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–†–ò–ü")
markup15.add(item)


@bot.message_handler(func=lambda message: message.text == "/start")
def notification(message):
    user_name = message.from_user.username
    user_id = message.from_user.id
    bot.send_message(admin_max, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(user_name) + " –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ –±–æ—Ç–∞! \nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - " + str(user_id))
    send_welcome(message)


def send_welcome(message):
    user_id = message.from_user.id
    if str(user_id) in am201 or str(user_id) in am202:
        ui(message)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞.", reply_markup=markup11)

        bot.register_next_step_handler(message, choise_start)


def choise_start(message):
    global mess
    mess = message.text
    if mess == config.PASSWORD:
        user_name = message.from_user.username
        users_id = message.chat.id
        username = message.from_user.username
        con = sqlite3.connect("my.db")

        cursor = con.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
                username text, user_id INT
                           )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS users_201(
                username text, user_id INT
                           )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS users_202(
                username text, user_id INT
                           )""")

        cursor.execute(f"SELECT user_id FROM users WHERE user_id = {users_id}")
        data = cursor.fetchone()

        if data is None:
            cursor.execute('INSERT INTO users VALUES (?, ?)', (username, users_id,))
            con.commit()

        bot.send_message(admin_max, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(user_name) + " –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –±–æ—Ç—É!")
        sti = open('AnimatedSticker.webp', 'rb')
        bot.send_sticker(message.chat.id, sti)
        username = message.from_user.username
        bot.send_message(message.chat.id, "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, " + str(username), reply_markup=markup)
    elif mess == "–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å":
        help_pass(message)
    else:
        bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π!")
        send_welcome(message)


@bot.message_handler(func=lambda message: message.text == "‚¨Ö–ù–ê–ó–ê–î")
def ui(message):
    sti = open('AnimatedSticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    username = message.from_user.username
    text = ['–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ, –∫–æ–∑–∞—á–µ!', '–ê –Ω—É —Å–∫–∞–∂–∏ –ø–∞–ª—è–Ω–∏—Ü—è!', '–•—Ç–æ –Ω–µ —Å–∫–∞—á–µ - —Ç–æ–π –º–æ—Å–∫–∞–ª—å!', '–°–º–µ—Ä—Ç—å –ø—É–π–ª—É!', '–°–∫—ñ–ª—å–∫–∏ —Ç–∞–Ω–∫—ñ–≤ –≤–∂–µ –≤–∫—Ä–∞–≤?']
    fraz = random.randint(0, int(len(text)) - 1)
    print(fraz)
    bot.send_message(message.chat.id, text[fraz], reply_markup=markup)


@bot.message_handler(commands=["add"])
def admin(message):
    user_id = message.from_user.id

    if str(user_id) == admin_max:
        message_send_news_news(message)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def message_send_news_news(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!")
    else:
        bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω—É–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
        bot.register_next_step_handler(message, reg_message)


def reg_message(message):
    global mess
    mess = message.text
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
    file = open('ads.txt', 'a', -1, 'utf-8')
    read = file.write(mess + ' (' + '‚è±' + str(datetime.now().date()) + '‚è±)\n')
    file.close()

    send(message)


def send(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute("SELECT user_id FROM users")

    records = cursor.fetchall()

    for us in records:
        try:
            bot.send_message(us[0], "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ ‚ùó–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏‚ùó")
        except:
            pass
    con.close()


@bot.message_handler(commands=["news"])
def message_send_news(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω—É–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
    bot.register_next_step_handler(message, reg_message_news)


def reg_message_news(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)

        con = sqlite3.connect("my.db")

        cursor = con.cursor()

        cursor.execute("SELECT user_id FROM users")

        records = cursor.fetchall()

        for us in records:
            try:
                sti = open('ben3.webp', 'rb')
                bot.send_sticker(us[0], sti)
                bot.send_message(us[0], mess)
            except:
                pass
        con.close()


@bot.message_handler(func=lambda message: message.text == "‚ùó–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏‚ùó" and message.chat.type == 'private')
def news(message):
    file = open('ads.txt', 'r', -1, 'utf-8')

    if os.stat("ads.txt").st_size == 0:
        bot.send_message(message.chat.id, "–¢—É—Ç –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç–æ)", reply_markup=markup)
    else:
        for line in file:
            bot.send_message(message.chat.id, line + '\n', reply_markup=markup)
        file.close()


@bot.message_handler(func=lambda message: message.text == "üì®–†–æ–∑—Å—ã–ª–∫–∞üì®" and message.chat.type == 'private')
def every_day_sand(message):
    user_id = message.from_user.id
    if str(user_id) == str(admin_max):
        date = datetime.today().isoweekday()
        nums = int(datetime.utcnow().isocalendar()[1])
        nums += 1

        con = sqlite3.connect("my.db")
        cursor = con.cursor()

        cursor.execute("SELECT user_id FROM users")

        records = cursor.fetchall()
        print("I`m started!")
        for us in records:
            try:
                if nums % 2 == 0:
                    print("SEND TO " + str(us[0]))
                    if date == 1:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–Ø–∑—ã–∫–∏ –û–û–ü - https://bit.ly/3a1NLNY\n\n"
                                                "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - https://bit.ly/3a1NLNY")
                    elif date == 2:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–ü—Ä–∞–≤–æ–∑–Ω–∞–≤—Å—Ç–≤–æ - https://cutt.ly/SSaz25n\n\n"
                                                "–ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–ª–æ–≥–∏—è - https://cutt.ly/bSaxdyT\n\n"
                                                "–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è - https://cutt.ly/ISaxcy6\n\n"
                                                "–Ø–∑—ã–∫–∏ –û–û–ü - https://bit.ly/3a1NLNY\n\n")
                    elif date == 3:
                        bot.send_message(us[0], "–°–µ–≥–æ–¥–Ω—è –ø—Ä–æ—Å—Ç–æ —á–∏–ª–∏–º")
                    elif date == 4:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ (–ê–ú201) - https://cutt.ly/IGHeVdh\n\n"
                                                "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ (–ê–ú202) - https://cutt.ly/kGHeLS3\n\n"
                                                "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - https://bit.ly/3a1NLNY")
                    elif date == 5:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–§–∏–ª–æ—Å–æ—Ñ–∏—è - https://cutt.ly/oSalGUT\n\n"
                                                "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ - https://cutt.ly/NGHe5Eq")
                else:
                    print("SEND TO " + str(us[0]))
                    if date == 1:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–Ø–∑—ã–∫–∏ –û–û–ü - https://bit.ly/3a1NLNY\n\n"
                                                "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - https://bit.ly/3a1NLNY")
                    elif date == 2:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–ü—Ä–∞–≤–æ–∑–Ω–∞–≤—Å—Ç–≤–æ - https://cutt.ly/SSaz25n\n\n"
                                                "–ö–æ–Ω—Ñ–ª–∏–∫—Ç–æ–ª–æ–≥–∏—è - https://cutt.ly/bSaxdyT\n\n"
                                                "–ü–æ–ª–∏—Ç–æ–ª–æ–≥–∏—è - https://cutt.ly/ISaxcy6\n\n"
                                                "–Ø–∑—ã–∫–∏ –û–û–ü - https://bit.ly/3a1NLNY\n\n"
                                                "–ö–æ–º–ø. —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ - —á–∏–ª–∏–º")
                    elif date == 3:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–¢–ò–ö - —á–∏–ª–∏–º\n\n"
                                                "–ö–æ–º–ø. —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ - —á–∏–ª–∏–º")
                    elif date == 4:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–¢–ò–ö - —á–∏–ª–∏–º\n\n"
                                                "–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö - https://bit.ly/3a1NLNY\n\n"
                                                "–§–∏–ª–æ—Å–æ—Ñ–∏—è - https://cutt.ly/oSalGUT")
                    elif date == 5:
                        bot.send_message(us[0], "*–ù—É–∂–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*", parse_mode="Markdown")
                        bot.send_message(us[0], "–§–∏–ª–æ—Å–æ—Ñ–∏—è - https://cutt.ly/oSalGUT\n\n"
                                                "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ - https://cutt.ly/NGHe5Eq")
            except:
                pass
        con.close()
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!")


@bot.message_handler(func=lambda message: message.text == "‚òÄ–ü–æ–≥–æ–¥–∞‚òÄ" and message.chat.type == 'private')
def weather1(message):
    location = '–û–¥–µ—Å—Å–∞'
    complete_api_link = "https://api.openweathermap.org/data/2.5/weather?q=odessa&appid=5cbeda47b8c5859f4bece2e13a11b5ba"
    api_link = requests.get(complete_api_link)
    api_data = api_link.json()

    temp_city = ((api_data['main']['temp']) - 273.15)
    weather_desc = api_data['weather'][0]['description']
    hmdt = api_data['main']['humidity']
    wind_spd = api_data['wind']['speed']
    date_time = datetime.now().strftime("%d %b %Y | %I:%M:%S %p")

    sti = open('sticker3.webp', 'rb')

    if weather_desc == "clear sky":
        weather_desc = "—è—Å–Ω–æ"
        sti = open('AnimatedSticker4.tgs', 'rb')
    elif weather_desc == "broken clouds":
        weather_desc = "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å"
        sti = open('sticker2.webp', 'rb')
    elif weather_desc == "few clouds":
        weather_desc = "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å"
        sti = open('sticker2.webp', 'rb')
    elif weather_desc == "scattered clouds":
        weather_desc = "—Ä–∞—Å—Å–µ—è–Ω–Ω—ã–µ –æ–±–ª–∞–∫–∞"
        sti = open('sticker3.webp', 'rb')
    elif weather_desc == "heavy intensity rain":
        weather_desc = "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å"
        sti = open('AnimatedSticker2.tgs', 'rb')
    elif weather_desc == "overcast clouds":
        weather_desc = "–ø–∞—Å–º—É—Ä–Ω–æ"
        sti = open('AnimatedSticker6.tgs', 'rb')
    elif weather_desc == "light rain":
        weather_desc = "—Å–ª–∞–±—ã–π –¥–æ–∂–¥—å"
        sti = open('AnimatedSticker3.tgs', 'rb')
    elif weather_desc == "moderate rain":
        weather_desc = "—É–º–µ—Ä–µ–Ω–Ω—ã–π –¥–æ–∂–¥—å"
        sti = open('AnimatedSticker3.tgs', 'rb')
    round(temp_city)
    bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –û–î–ï–°–°–ê".format(location.upper()), reply_markup=markup6)
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞             : {:.0f} ¬∞C ".format(temp_city), reply_markup=markup6)
    bot.send_message(message.chat.id, "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã  : " + weather_desc, reply_markup=markup6)
    bot.send_message(message.chat.id, "–í–ª–∞–∂–Ω–æ—Å—Ç—å                 : " + str(hmdt) + "%", reply_markup=markup6)
    bot.send_message(message.chat.id, "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞        : " + str(wind_spd) + "–∫–º/—á", reply_markup=markup6)


@bot.message_handler(func=lambda message: message.text == "–ê–ú201" and message.chat.type == 'private')
def profilee5(message):
    nums = int(datetime.utcnow().isocalendar()[1])
    print(nums)

    t = time(12, 00, 00).strftime("%H:%M:%S")
    z = datetime.now().strftime("%H:%M:%S")
    print(t)
    print(z)
    if z > t:
        print("zawtra")
    else:
        print("segodnya")

    date = datetime.today().isoweekday()

    if date == 1 and z < t:
        profile(message)
    elif date == 2 and z < t:
        profile1(message, nums)
    elif date == 3 and z < t:
        profile2(message)
    elif date == 4 and z < t:
        profile3(message, nums)
    elif date == 5 and z < t:
        profile4(message, nums)
    elif date == 1 and z > t:
        profile1(message, nums)
    elif date == 2 and z > t:
        profile2(message)
    elif date == 3 and z > t:
        profile3(message, nums)
    elif date == 4 and z > t:
        profile4(message, nums)
    elif date == 5 and z > t:
        profile(message)
    elif date == 6 or date == 7:
        profile(message)


def profile(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|3.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile1(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 201")
def timetable(message):
    nums = int(datetime.utcnow().isocalendar()[1])

    profil(message)
    profil1(message, nums)
    profil2(message)
    profil3(message, nums)
    profil4(message, nums)

def profil(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|3.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil1(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ê–ú202" and message.chat.type == 'private')
def profile5(message):
    t = time(12, 00, 00).strftime("%H:%M:%S")
    z = datetime.now().strftime("%H:%M:%S")

    nums = int(datetime.utcnow().isocalendar()[1])
    print(nums)

    print(t)
    print(z)
    if z > t:
        print("zawtra")
    else:
        print("segodnya")

    date = datetime.today().isoweekday()

    if date == 1 and z < t:
        prfile(message)
    elif date == 2 and z < t:
        prfile1(message, nums)
    elif date == 3 and z < t:
        prfile2(message)
    elif date == 4 and z < t:
        prfile3(message, nums)
    elif date == 5 and z < t:
        prfile4(message, nums)
    elif date == 1 and z > t:
        prfile1(message, nums)
    elif date == 2 and z > t:
        prfile2(message)
    elif date == 3 and z > t:
        prfile3(message, nums)
    elif date == 4 and z > t:
        prfile4(message, nums)
    elif date == 5 and z > t:
        prfile(message)
    elif date == 6 or date == 7:
        prfile(message)


def prfile(message):
    bot.send_message(message.chat.id, "*–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")
    bot.send_message(message.chat.id, "1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú    | –õ–ï–ö.\n\n"
                                      "2.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏   | –õ–ê–ë.\n\n"
                                      "3.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú   | –õ–ê–ë.\n\n"
                                      "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfile1(message, nums):
    bot.send_message(message.chat.id, "*–í–¢–û–†–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.   | –õ–ï–ö.\n\n"
                                          "3.–°–ü–ó                      | –õ–ï–ö.\n\n"
                                          "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    else:
        bot.send_message(message.chat.id, "1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã  | –õ–ê–ë.\n\n"
                                          "2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.   | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏           | –õ–ï–ö.\n\n"
                                          "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfile2(message):
    bot.send_message(message.chat.id, "*–°–†–ï–î–ê*", reply_markup=markup7, parse_mode="Markdown")
    bot.send_message(message.chat.id, "1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.           | –ü–†.\n\n"
                                      "2.–°–ü–ó                             | –õ–ï–ö.\n\n"
                                      "3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä. | –õ–ï–ö.\n\n"
                                      "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfile3(message, nums):
    bot.send_message(message.chat.id, "*–ß–ï–¢–í–ï–†–ì*", reply_markup=markup7, parse_mode="Markdown")
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –õ–ï–ö.\n\n"
                                          "3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –ü–†.\n\n"
                                          "4.–°–ü–ó                         | –õ–ê–ë.")
    else:
        bot.send_message(message.chat.id, "1.–°–ü–ó                         | –õ–ê–ë.\n\n"
                                          "2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏             | –õ–ê–ë.\n\n"
                                          "4.–°–ü–ó                         | –õ–ê–ë.")


def prfile4(message, nums):
    bot.send_message(message.chat.id, "*–ü–Ø–¢–ù–ò–¶–ê*", reply_markup=markup7, parse_mode="Markdown")
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã       | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏                 | –õ–ï–ö.\n\n"
                                          "4.–§–∏–∑—Ä–∞")
    else:
        bot.send_message(message.chat.id, "1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä. | –õ–ê–ë\n\n"
                                          "2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏              | –õ–ï–ö.\n\n"
                                          "4.–§–∏–∑—Ä–∞")

@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 202")
def timetable(message):
    prfil(message)
    prfil1(message, nums)
    prfil2(message)
    prfil3(message, nums)
    prfil4(message, nums)


def prfil(message):
    bot.send_message(message.chat.id, "*–ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")
    bot.send_message(message.chat.id, "1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú    | –õ–ï–ö.\n\n"
                                      "2.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏   | –õ–ê–ë.\n\n"
                                      "3.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú   | –õ–ê–ë.\n\n"
                                      "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfil1(message, nums):
    bot.send_message(message.chat.id, "*–í–¢–û–†–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.   | –õ–ï–ö.\n\n"
                                          "3.–°–ü–ó                      | –õ–ï–ö.\n\n"
                                          "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    else:
        bot.send_message(message.chat.id, "1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã  | –õ–ê–ë.\n\n"
                                          "2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.   | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏           | –õ–ï–ö.\n\n"
                                          "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfil2(message):
    bot.send_message(message.chat.id, "*–°–†–ï–î–ê*", reply_markup=markup7, parse_mode="Markdown")
    bot.send_message(message.chat.id, "1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.           | –ü–†.\n\n"
                                      "2.–°–ü–ó                             | –õ–ï–ö.\n\n"
                                      "3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä. | –õ–ï–ö.\n\n"
                                      "4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")


def prfil3(message, nums):
    bot.send_message(message.chat.id, "*–ß–ï–¢–í–ï–†–ì*", reply_markup=markup7, parse_mode="Markdown")
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –õ–ï–ö.\n\n"
                                          "3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –ü–†.\n\n"
                                          "4.–°–ü–ó                         | –õ–ê–ë.")
    else:
        bot.send_message(message.chat.id, "1.–°–ü–ó                         | –õ–ê–ë.\n\n"
                                          "2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å  | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏             | –õ–ê–ë.\n\n"
                                          "4.–°–ü–ó                         | –õ–ê–ë.")


def prfil4(message, nums):
    bot.send_message(message.chat.id, "*–ü–Ø–¢–ù–ò–¶–ê*", reply_markup=markup7, parse_mode="Markdown")
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç\n\n"
                                          "2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã       | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏                 | –õ–ï–ö.\n\n"
                                          "4.–§–∏–∑—Ä–∞")
    else:
        bot.send_message(message.chat.id, "1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä. | –õ–ê–ë\n\n"
                                          "2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö.\n\n"
                                          "3.–ö–æ–º–ø. —Å–µ—Ç–∏              | –õ–ï–ö.\n\n"
                                          "4.–§–∏–∑—Ä–∞")


@bot.message_handler(func=lambda message: message.text == "üìö–ü–∞—Ä—ãüìö" and message.chat.type == 'private')
def par(message):
    user_id = message.from_user.id
    for i in am201:
        if str(user_id) == i:
            profilee5(message)

    for i in am202:
        if str(user_id) == i:
            profile5(message)


@bot.message_handler(func=lambda message: message.text == "üé≤–ù–∞–π—Ç–∏ –∂–µ—Ä—Ç–≤—Éüé≤" and message.chat.type == 'private')
def profile6(message):
    rand = ["–ê–≤–¥–µ–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –û–ª–µ–≥–æ–≤–∏—á", "–ê—Ä—É—Ç—é–Ω–æ–≤ –ê—Ä—Ç—ë–º –ê—Ä—Ç—É—Ä–æ–≤–∏—á", "–ë–µ–ª—å—á–∏–∫ –ö–∏—Ä–∏–ª–ª –ë–æ—Ä–∏—Å–æ–≤–∏—á",
            "–î–µ–º–∏–¥–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á", "–ï–º–µ—Ü –ê–Ω–¥—Ä–µ–π –í–∏—Ç–∞–ª—å–µ–≤–∏—á", "–ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á",
            "–ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –°–µ—Ä–≥–µ–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á", "–ú–∏—Ö–æ–≤ –ê–Ω–¥—Ä–µ–π –ò–≥–æ—Ä–µ–≤–∏—á", "–û—Ä–ª–æ–≤ –†–æ–º–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á",
            "–°–≤–æ–±–æ–¥–∞ –¢–∏–º—É—Ä –Æ—Ä—å–µ–≤–∏—á", "–°–º–∞–ª—å –ú–∞–∫—Å–∏–º –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á", "–ß–µ—Ä–Ω—ã—Ö –ö–∏—Ä–∏–ª–ª –ú–∏—Ö–∞–π–ª–æ–≤–∏—á", "–ß—É–º–∞–∫ –ú–∞–∫—Å–∏–º –ê–ª–µ–∫—Å–µ–µ–≤–∏—á",
            "–Ø–∫–æ–≤–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á", "–î–µ–Ω–∏—Å—é–∫ –î–∏–∞–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞"]
    sti = open('sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, random.SystemRandom().choice(rand))


@bot.message_handler(func=lambda message: message.text == "üôé‚Äç‚ôÇ–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤üôç‚Äç‚ôÄ" and message.chat.type == 'private')
def profile7(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!", reply_markup=markup2)


@bot.message_handler(func=lambda message: message.text == "–î–ê–õ–ï–ï‚û°" and message.chat.type == 'private')
def profile8(message):
    bot.send_message(message.chat.id, "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup6)


@bot.message_handler(func=lambda message: message.text == "‚åõ–ó–≤–æ–Ω–∫–∏‚åõ" and message.chat.type == 'private')
def profile9(message):
    bot.send_message(message.chat.id, "–°–º–æ—Ç—Ä–∏ –Ω–µ –æ–ø–æ–∑–¥–∞–πüòâ", reply_markup=markup)
    bot.send_message(message.chat.id, "1    8:00-8:45	             8:50-9:35\n", reply_markup=markup)
    bot.send_message(message.chat.id, "2    9:50-10:35	          10:40-11:25\n", reply_markup=markup)
    bot.send_message(message.chat.id, "3    11:40-12:25	        12:30-13:15\n", reply_markup=markup)
    bot.send_message(message.chat.id, "4    13:30-14:15	        14:20-15:05\n", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ê–ú-201" and message.chat.type == 'private')
def stud(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã –ê–ú-201: \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "1 –ê–≤–¥–µ–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –û–ª–µ–≥–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "2 –ê—Ä—É—Ç—é–Ω–æ–≤ –ê—Ä—Ç—ë–º –ê—Ä—Ç—É—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "3 –ë–µ–ª—å—á–∏–∫ –ö–∏—Ä–∏–ª–ª –ë–æ—Ä–∏—Å–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "4 –î–µ–º–∏–¥–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "5 –ï–º–µ—Ü –ê–Ω–¥—Ä–µ–π –í–∏—Ç–∞–ª—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "6 –ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "7 –ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –°–µ—Ä–≥–µ–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "8 –ú–∏—Ö–æ–≤ –ê–Ω–¥—Ä–µ–π –ò–≥–æ—Ä–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "9 –û—Ä–ª–æ–≤ –†–æ–º–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "10 –°–≤–æ–±–æ–¥–∞ –¢–∏–º—É—Ä –Æ—Ä—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "11 –°–º–∞–ª—å –ú–∞–∫—Å–∏–º –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "12 –ß–µ—Ä–Ω—ã—Ö –ö–∏—Ä–∏–ª–ª –ú–∏—Ö–∞–π–ª–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "13 –ß—É–º–∞–∫ –ú–∞–∫—Å–∏–º –ê–ª–µ–∫—Å–µ–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "14 –Ø–∫–æ–≤–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "15 –î–µ–Ω–∏—Å—é–∫ –î–∏–∞–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n", reply_markup=markup2)


@bot.message_handler(func=lambda message: message.text == "–ê–ú-202" and message.chat.type == 'private')
def stud1(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã –ê–ú-202: \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "1 –ë–µ–∑—É–≥–ª–∞—è –ê–ª–∏–Ω–∞ –ò–≥–æ—Ä—å–µ–≤–Ω–∞\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "2 –ì–∞–≤—Ä–∏–ª–æ–≤ –ù–∏–∫–∏—Ç–∞ –î–º–∏—Ç—Ä–∏–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "3 –î–∏–º–∏—Ç—Ä–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–∞—Ä—á–µ–ª–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "4 –ö–æ—á–∫–æ–≤ –†–æ–º–∞–Ω –ë–æ—Ä–∏—Å–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "5 –ö—Ä–∏–≤–æ—Ä—É—á–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "6 –ö—É—Ä—É—á –ù–∏–∫–∏—Ç–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "7 –°–∞–≤—á–µ–Ω–∫–æ –î–µ–Ω–∏—Å –í–∞–¥–∏–º–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "8 –°–∞–∫–∞–ª –¢–∏–º–æ—Ñ–µ–π –Æ—Ä—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "9 –Ø–Ω—á—É–∫ –í–ª–∞–¥–∏–º–∏—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "10 –ï–∫—Å–∞—Ä–æ–≤ –ü–∞–≤–µ–ª \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "11 –§–µ–¥—á—É–∫ –ï–≤–≥–µ–Ω \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "12 –°–µ—Ä–æ–æ—á–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "13 –ë–æ–Ω–¥–∞—Ä–µ–Ω–∫–æ –ò–ª—å—è\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "14 –°—Ç–∞–¥–Ω–∏–∫ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "15 –®–æ—Å—Ç–∞–∫ –Ø—Ä–æ—Å–ª–∞–≤\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "16 –¢–∞—Ä–∞—Å–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "17 –ë–∞–±–∏—á –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "18 –¢–∫–∞—á—ë–≤–∞ –¢–∞—Ç—å—è–Ω–∞\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "19 –°–∏–≤–∞–∫ –î–º–∏—Ç—Ä–∏–π\n", reply_markup=markup2)


@bot.message_handler(func=lambda message: message.text == "üíº–ò–Ω—Ñ–∞ –æ –ø—Ä–µ–ø–æ–¥–∞—Öüíº" and message.chat.type == 'private')
def profile10(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç! \n", reply_markup=markup5)


@bot.message_handler(commands=["add_dz_201"])
def admin_201(message):
    user_id = message.from_user.id

    if str(user_id) == admin_max:
        message_send_dz(message)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def message_send_dz(message):
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –î–ó –∏ –ø—Ä–∏ —ç—Ç–æ–º —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!")
    bot.send_message(message.chat.id, "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ close")
    bot.register_next_step_handler(message, reg_message1)


def reg_message1(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
        file = open('dz201.txt', 'a', -1, 'utf-8')
        read = file.write(mess + ' (' + '‚è±' + str(datetime.now().date()) + '‚è±)\n')
        file.close()

        send_dz(message)


def send_dz(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute("SELECT user_id FROM users_201")

    records = cursor.fetchall()

    for us in records:
        try:
            bot.send_message(us[0], "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ üñ•–î/–óüñ•")
        except:
            pass
    con.close()


@bot.message_handler(commands=["add_dz_202"])
def admin_202(message):
    user_id = message.from_user.id

    if str(user_id) == admin_max or str(user_id) == admin_alina or str(user_id) == admin_vova:
        message_send_dz_202(message)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def message_send_dz_202(message):
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –î–ó –∏ –ø—Ä–∏ —ç—Ç–æ–º —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!")
    bot.send_message(message.chat.id, "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ close")
    bot.register_next_step_handler(message, reg_message_202)


def reg_message_202(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
        file = open('dz202.txt', 'a', -1, 'utf-8')
        read = file.write(mess + ' (' + '‚è±' + str(datetime.now().date()) + '‚è±)\n')
        file.close()

        send_dz_202(message)


def send_dz_202(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute("SELECT user_id FROM users_202")

    records = cursor.fetchall()

    for us in records:
        try:
            bot.send_message(us[0], "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ üñ•–î/–óüñ•")
        except:
            pass
    con.close()


@bot.message_handler(commands=["teacher"])
def send_to_teacher(message):
    #bot.send_message(1772143638, "–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–∞–Ω–¥—É /admin_send –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ.")
    bot.send_message(1772143638, "–°–æ—Ä—è–Ω –Ω–æ —Ç—è–Ω–æ—á–µ–∫ –Ω–µ –ø—É—Å–∫–∞–µ–º, —ç—Ç–æ—Ç –±–æ—Ç –¥–ª—è —É—á—ë–±—ã.")


@bot.message_handler(commands=["admin_send"])
def send_to_admin1(message):
    # user_id = message.from_user.id
    # if str(user_id) == ev:
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)")
    bot.register_next_step_handler(message, reg_teacher1)
    # else:
    # bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def reg_teacher1(message):
    username = message.from_user.username
    global mess
    mess = message.text + " from " + username
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup11)
    bot.send_message(admin_max, mess)


@bot.message_handler(commands=["admin"])
def send_to_admin(message):
    # user_id = message.from_user.id
    # if str(user_id) == ev:
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –∏–º—è –∏ –æ—Ç—á–µ—Å—Ç–≤–æ (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)")
    bot.register_next_step_handler(message, reg_teacher)
    # else:
    # bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def reg_teacher(message):
    username = message.from_user.username
    global mess
    mess = message.text + " from " + username
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
    bot.send_message(admin_max, mess)


@bot.message_handler(func=lambda message: message.text == "–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å" and message.chat.type == 'private')
def help_pass(message):
    bot.send_message(message.chat.id, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–æ–º, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.", reply_markup=markup11)
    send_to_admin_mess(message)

def send_to_admin_mess(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É")
    bot.register_next_step_handler(message, reg_mess_admin)

def reg_mess_admin(message):
    global mess
    mess = message.text
    user_name = message.from_user.username
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup11)
    bot.send_message(admin_max, "–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è" + " –æ—Ç: " + str(user_name) + "\n" + mess, reply_markup=markup13)
    send_welcome(message)


@bot.message_handler(func=lambda message: message.text == "–û–¢–ü–†–ê–í–ò–¢–¨" and message.chat.type == 'private')
def solution(message):
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
    bot.register_next_step_handler(message, solution_send)


def solution_send(message):
    global mess
    mess = message.text
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø!", reply_markup=markup)
    bot.send_message(mess, "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç! \n –ü–∞—Ä–æ–ª—å: QWERTY20X", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–ï –û–¢–ü–†–ê–í–õ–Ø–¢–¨" and message.chat.type == 'private')
def solution2(message):
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
    bot.register_next_step_handler(message, solution_no_send)


def solution_no_send(message):
    global mess
    mess = message.text
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!", reply_markup=markup)
    bot.send_message(mess, "–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç!", reply_markup=markup15)


@bot.message_handler(func=lambda message: message.text == "201" and message.chat.type == 'private')
def dz_201(message):
    file = open('dz201.txt', 'r', -1, 'utf-8')

    if os.stat("dz201.txt").st_size == 0:
        bot.send_message(message.chat.id, "–¢—É—Ç –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç–æ)", reply_markup=markup4)
    else:
        for line in file:
            bot.send_message(message.chat.id, line + '\n', reply_markup=markup4)
        file.close()


@bot.message_handler(func=lambda message: message.text == "202" and message.chat.type == 'private')
def dz_201(message):
    file = open('dz202.txt', 'r', -1, 'utf-8')

    if os.stat("dz202.txt").st_size == 0:
        bot.send_message(message.chat.id, "–¢—É—Ç –ø–æ–∫–∞ —á—Ç–æ –ø—É—Å—Ç–æ)", reply_markup=markup4)
    else:
        for line in file:
            bot.send_message(message.chat.id, line + '\n', reply_markup=markup4)
        file.close()


@bot.message_handler(func=lambda message: message.text == "üñ•–î/–óüñ•" and message.chat.type == 'private')
def dz(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É", reply_markup=markup10)


@bot.message_handler(func=lambda message: message.text == "üìÑ–õ–∞–±—ãüìÑ" and message.chat.type == 'private')
def lab(message):
    bot.send_message(message.chat.id, "–ü–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ —Ç—ã —É–≤–∏–¥–∏—à—å –ª–∞–±—ã –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º.", reply_markup=markup)
    bot.send_message(message.chat.id, "https://bit.ly/3kwxJ4F", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏" and message.chat.type == 'private')
def profile12(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/tostanovska-irina-borisivna.jpg?itok=JtjrIvnw")
    bot.send_message(message.chat.id, "–¢–æ—Å—Ç–∞–Ω–æ–≤—Å–∫–∞—è –ò—Ä–∏–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - –∫–∞—Ñ–µ–¥—Ä–∞ –≤—ã—à–º–∞—Ç–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - tostanovska@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–ê–ú-201" and message.chat.type == 'private')
def profile13(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç!", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "üë•–û–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—åüë•" and message.chat.type == 'private')
def lab_send(message):
    bot.send_message(message.chat.id, "–ì–æ—Ç–æ–≤ –ª–∏ —Ç—ã —Å–¥–∞–≤–∞—Ç—å –ª–∞–±—É?", reply_markup=markup14)


@bot.message_handler(func=lambda message: message.text == "–ì–û–¢–û–í" and message.chat.type == 'private')
def lab_send(message):
    username = message.from_user.username
    file = open("stack.txt", "r", -1, "utf-8")

    text = file.read()
    if username in text:
        bot.send_message(message.chat.id, "–¢—ã —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ!)", reply_markup=markup)
        print("bad")
    else:
        file1 = open("stack.txt", 'a', -1, 'utf-8')
        bot.send_message(message.chat.id, "–¢—ã –≤–Ω–µ—Å—ë–Ω –≤ —Å–ø–∏—Å–æ–∫.", reply_markup=markup)
        file1.write(str(username) + ' ')
        print("super")


@bot.message_handler(func=lambda message: message.text == "–ù–ï –ì–û–¢–û–í" and message.chat.type == 'private')
def lab_send_not(message):
    file1 = open("stack2.txt", "r", -1, "utf-8")
    username = message.from_user.username
    text = file1.read()
    if username in text:
        bot.send_message(message.chat.id, " –Ø —É–∂–µ –ø–æ–Ω—è–ª —á—Ç–æ —Ç—ã –Ω–µ –±—É–¥–µ—à—å —Å–¥–∞–≤–∞—Ç—å)", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–ë—É–¥—å –≥–æ—Ç–æ–≤ –Ω–∞ —Å–ª—É–¥—É—é—â–∏–π —Ä–∞–∑", reply_markup=markup)
        file = open("stack2.txt", "a", -1, "utf-8")
        file.write(str(username) + ' ')


@bot.message_handler(func=lambda message: message.text == "–ì–ï–ù–ï–†–ò–†–û–í–ê–¢–¨ –°–ü–ò–°–û–ö" and message.chat.type == 'private')
def lab_send(message):
    user_id = message.from_user.id
    if str(user_id) == admin_max:
        file = open("stack.txt", "r", -1, "utf-8")
        if os.stat("stack.txt").st_size == 0:
            bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç!", reply_markup=markup)
        else:
            bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤!", reply_markup=markup)
            spisok = []

            for line in file.read().split():
                spisok += line.split()
            print(spisok)

            random.shuffle(spisok)

            con = sqlite3.connect("my.db")
            cursor = con.cursor()

            cursor.execute("SELECT user_id FROM users")

            records = cursor.fetchall()

            for us in records:
                try:
                    bot.send_message(us[0], str(spisok))
                except:
                    pass
            con.close()


        file.close()
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", reply_markup=markup)



@bot.message_handler(func=lambda message: message.text == "–ö–æ–º–ø. –ª–æ–≥–∏–∫–∞" and message.chat.type == 'private')
def profile14(message):
    bot.send_photo(message.chat.id,
                   "https://opu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/shaporin-ruslan-olegovych.jpg?itok=KTFWcdDv")
    bot.send_message(message.chat.id, "–®–∞–ø–æ—Ä–∏–Ω –†—É—Å–ª–∞–Ω –û–ª–µ–≥–æ–≤–∏—á \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 812 –∫–∞–±–∏–Ω–µ—Ç \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - shaporin@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - +380487058322 \n", reply_markup=markup5)

    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/podliegaiev-mihaylo-mikolayovich.jpg?itok=13YFb_sG")
    bot.send_message(message.chat.id, "–ü–æ–¥–ª–µ–≥–∞–µ–≤ –ú–∏—Ö–∞–∏–ª –ù–∏–∫–æ–ª–∞–µ–≤–∏—á \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 810 –∫–∞–±–∏–Ω–µ—Ç \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - cuppmm@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤" and message.chat.type == 'private')
def profile15(message):
    bot.send_photo(message.chat.id,
                   "https://opu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/blinov-igor-pavlovych.jpg?itok=VFe0xkUz")
    bot.send_message(message.chat.id, "–ë–ª–∏–Ω–æ–≤ –ò–≥–æ—Ä—å –ü–∞–≤–ª–æ–≤–∏—á \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 812 –∫–∞–±–∏–Ω–µ—Ç \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - blinov@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–£–∫—Ä. —è–∑—ã–∫" and message.chat.type == 'private')
def profile16(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/braychenko-svitlana-leonidivna.jpg?itok=6kIZZSnf")
    bot.send_message(message.chat.id, "–ë—Ä–∞–π—á–µ–Ω–∫–æ –°–≤–µ—Ç–ª–∞–Ω–∞ –õ–µ–æ–Ω–∏–¥–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 119–• \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - braychenkosveta@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(
    func=lambda message: message.text == "–°–∏—Å—Ç–µ–º–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ" and message.chat.type == 'private')
def profile16(message):
    bot.send_message(message.chat.id, "–§–æ—Ç–æ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    bot.send_message(message.chat.id, "–ì–æ–ª–æ–≤–∞—á–æ–≤–∞ –ï–ª–µ–Ω–∞ –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 810 –∫–∞–±–∏–Ω–µ—Ç \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - holovachova@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–¢–û–≠" and message.chat.type == 'private')
def profile17(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/yarmolovich-viktoriya-yaroslavivna.jpg?itok=RWfa6mUy")
    bot.send_message(message.chat.id, "–Ø—Ä–º–æ–ª–æ–≤–∏—á –í–∏–∫—Ç–æ—Ä–∏—è –Ø—Ä–æ—Å–ª–∞–≤–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - –∫–æ—Ä–ø—É—Å –£ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - yarmolovych@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è" and message.chat.type == 'private')
def profile18(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/todorceva-yuliya-viktorivna.jpg?itok=ZyZ0ruo5")
    bot.send_message(message.chat.id, "–¢–æ–¥–æ—Ä—Ü–æ–≤–∞ –Æ–ª–∏—è –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - –∫–∞—Ñ–µ–¥—Ä–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - todortseva@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - +380676018517 \n", reply_markup=markup5)

    bot.send_message(message.chat.id, "–§–æ—Ç–æ - –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    bot.send_message(message.chat.id, "–í–æ–ª–æ—à–µ–Ω–∫–æ –ú–∞—Ä–∏–Ω–∞ –û–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 122–• \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - voloshenko@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - +380506003747 \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" and message.chat.type == 'private')
def profile19(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/kopitchuk-igor-mikolayovich.jpg?itok=xkN77VO7")
    bot.send_message(message.chat.id, "–ö–æ–ø–∏—Ç—á—É–∫ –ò–≥–æ—Ä—å –ù–∏–∫–æ–ª–∞–µ–≤–∏—á \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - 810 –∫–∞–±–∏–Ω–µ—Ç \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - igor.kopytchuk@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "–§–∏–∑—Ä–∞" and message.chat.type == 'private')
def profile20(message):
    bot.send_photo(message.chat.id,
                   "https://op.edu.ua/sites/default/files/styles/staffphoto/public/images/staff/photos/gromakovska-zinayida-petrivna.jpg?itok=XA-FZxSs")
    bot.send_message(message.chat.id, "–ì—Ä–æ–º–∞–∫–æ–≤—Å–∫–∞—è –ó–∏–Ω–∞–∏–¥–∞ –ü–µ—Ç—Ä–æ–≤–Ω–∞ \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ú–µ—Å—Ç–æ –æ–±–∏—Ç–∞–Ω–∏—è - —Ñ–∏–∑–∫–æ—Ä–ø—É—Å \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ - z.p.gromakovskaya@op.edu.ua \n", reply_markup=markup5)
    bot.send_message(message.chat.id, "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ - –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω \n", reply_markup=markup5)


@bot.message_handler(func=lambda message: message.text == "üê∂–ë–ï–ùüê∂" and message.chat.type == 'private')
def profile21(message):
    sti = open('ben4.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, "Ben is listening")

    @bot.message_handler(content_types=["text"])
    def ben(message):
        sti = open('ben.webp', 'rb')
        bot.send_sticker(message.chat.id, sti)
        talks = ['Hohoho', 'Yes', 'No', 'Ughh']
        bot.send_message(message.chat.id, random.choice(talks))


def main():
    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()
