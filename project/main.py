# -*- coding: utf-8 -*-
# !/usr/bin/python3.9
import random
import requests
from datetime import datetime
from datetime import time
import datetime as dt
import sqlite3
import os
import config
import telebot
from telebot import types
import multiprocessing
import schedule
import time as tm

token_number = int(os.environ.get('TOK_NUM'))
# print('TOK_NUM', token_number)

bot = telebot.TeleBot(config.TOKEN[token_number])

print(dt.datetime.now())

status_1 = False
status_2 = False
status_3 = False
status_4 = False
status_5 = False

admin_max = config.ADMIN_MAX
admin_alina = config.ADMIN_ALINA
admin_vova = config.ADMIN_VOVA
ev = config.EV
am201 = config.SPISOK201
am202 = config.SPISOK202

location = '–û–¥–µ—Å—Å–∞'
complete_api_link = "https://api.openweathermap.org/data/2.5/weather?q=odessa&appid=5cbeda47b8c5859f4bece2e13a11b5ba"
api_link = requests.get(complete_api_link)
api_data = api_link.json()

temp_city = ((api_data['main']['temp']) - 273.15)
weather_desc = api_data['weather'][0]['description']
hmdt = api_data['main']['humidity']
wind_spd = api_data['wind']['speed']
date_time = datetime.now().strftime("%d %b %Y | %I:%M:%S %p")

today = datetime.today()
week = today.strftime("%U")

markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("üìö–ü–∞—Ä—ãüìö")
# item2 = types.KeyboardButton("üé≤–ù–∞–π—Ç–∏ –∂–µ—Ä—Ç–≤—Éüé≤")
item3 = types.KeyboardButton("‚åõ–ó–≤–æ–Ω–∫–∏‚åõ")
item = types.KeyboardButton("‚òÄ–ü–æ–≥–æ–¥–∞‚òÄ")

# item4 = types.KeyboardButton("–î–ê–õ–ï–ï‚û°")

markup.add(item1, item, item3)

markup2 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ê–ú-201")
item2 = types.KeyboardButton("–ê–ú-202")
markup2.add(item1, item2)

markup4 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup4.add(item1)

markup6 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("üé≤–ù–∞–π—Ç–∏ –∂–µ—Ä—Ç–≤—Éüé≤")
item2 = types.KeyboardButton("üôé‚Äç‚ôÇ–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤üôç‚Äç‚ôÄ")
# item3 = types.KeyboardButton("üíº–ò–Ω—Ñ–∞ –æ –ø—Ä–µ–ø–æ–¥–∞—Öüíº")
item3 = types.KeyboardButton("üì®–†–æ–∑—Å—ã–ª–∫–∞üì®")
item4 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
item5 = types.KeyboardButton("üë•–û–±—Ä–∞–∑–æ–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—åüë•")
item = types.KeyboardButton("‚òÄ–ü–æ–≥–æ–¥–∞‚òÄ")
ite = types.KeyboardButton("üê∂–ë–ï–ùüê∂")
markup6.add(item1, item2, item3, item4, item5, item, ite)

markup7 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 201")
item = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup7.add(item1, item)

markup8 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ê–ú201")
item2 = types.KeyboardButton("–ê–ú202")
item3 = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup8.add(item1, item2, item3)

markup9 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item1 = types.KeyboardButton("–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 202")
item = types.KeyboardButton("‚¨Ö–ù–ê–ó–ê–î")
markup9.add(item1, item)

markup11 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item2 = types.KeyboardButton("–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å")
markup11.add(item2)

markup13 = types.ReplyKeyboardMarkup(resize_keyboard=True)
item = types.KeyboardButton("–û–¢–ü–†–ê–í–ò–¢–¨")
item2 = types.KeyboardButton("–ù–ï –û–¢–ü–†–ê–í–õ–Ø–¢–¨")
markup13.add(item, item2)


@bot.message_handler(func=lambda message: message.text == "/start")
def notification(message):
    user_name = message.from_user.username
    user_id = message.from_user.id
    bot.send_message(admin_max, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(user_name) + " –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ –±–æ—Ç–∞! \nID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - " + str(user_id))
    send_welcome(message)


def send_welcome(message):
    user_id = message.from_user.id

    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute(f"SELECT user_id FROM users_201 WHERE user_id = {user_id}")
    data = cursor.fetchone()

    cursor.execute(f"SELECT user_id FROM users_202 WHERE user_id = {user_id}")
    data_2 = cursor.fetchone()

    if str(user_id) in str(data) or str(user_id) in str(data_2):
        ui(message)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –±–æ—Ç–∞.", reply_markup=markup11)

        bot.register_next_step_handler(message, choise_start)


def choise_start(message):
    global mess
    mess = message.text
    if mess == config.PASSWORD:
        user_name = message.from_user.username
        users_id = message.chat.id
        username = message.from_user.username
        con = sqlite3.connect("my.db")

        cursor = con.cursor()

        cursor.execute("""CREATE TABLE IF NOT EXISTS users(
                username text, user_id INT
                           )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS users_201(
                username text, user_id INT
                           )""")

        cursor.execute("""CREATE TABLE IF NOT EXISTS users_202(
                username text, user_id INT
                           )""")

        cursor.execute(f"SELECT user_id FROM users WHERE user_id = {users_id}")
        data = cursor.fetchone()

        if data is None:
            cursor.execute('INSERT INTO users VALUES (?, ?)', (username, users_id,))
            con.commit()

        bot.send_message(message.chat.id, "–ò–∑ –∫–∞–∫–æ–π —Ç—ã –≥—Ä—É–ø–ø—ã?", reply_markup=markup2)
        bot.register_next_step_handler(message, check_group)
    elif mess == "–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å":
        help_pass(message)
    else:
        bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å –Ω–µ –≤–µ—Ä–Ω—ã–π!")
        send_welcome(message)


def check_group(message):
    global mess
    mess = message.text

    users_id = message.chat.id
    username = message.from_user.username

    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    if mess == "–ê–ú-201":
        cursor.execute(f"SELECT user_id FROM users_201 WHERE user_id = {users_id}")
        data = cursor.fetchone()

        if data is None:
            cursor.execute('INSERT INTO users_201 VALUES (?, ?)', (username, users_id,))
            con.commit()
    elif mess == "–ê–ú-202":
        cursor.execute(f"SELECT user_id FROM users_202 WHERE user_id = {users_id}")
        data = cursor.fetchone()

        if data is None:
            cursor.execute('INSERT INTO users_202 VALUES (?, ?)', (username, users_id,))
            con.commit()

    bot.send_message(admin_max, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(username) + " –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –±–æ—Ç—É!")
    bot.send_message(message.chat.id, "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, " + str(username), reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "‚¨Ö–ù–ê–ó–ê–î")
def ui(message):
    sti = open('AnimatedSticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    text = ['–°–ª–∞–≤–∞ –£–∫—Ä–∞—ó–Ω—ñ, –∫–æ–∑–∞—á–µ!', '–ê –Ω—É —Å–∫–∞–∂–∏ –ø–∞–ª—è–Ω–∏—Ü—è!', '–•—Ç–æ –Ω–µ —Å–∫–∞—á–µ - —Ç–æ–π –º–æ—Å–∫–∞–ª—å!', '–°–º–µ—Ä—Ç—å –ø—É–π–ª—É!', '–°–∫—ñ–ª—å–∫–∏ —Ç–∞–Ω–∫—ñ–≤ –≤–∂–µ –≤–∫—Ä–∞–≤?']
    fraz = random.randint(0, int(len(text)) - 1)
    print(fraz)
    bot.send_message(message.chat.id, text[fraz], reply_markup=markup)


@bot.message_handler(commands=["news"])
def message_send_news(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –Ω—É–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")
    bot.register_next_step_handler(message, reg_message_news)


def reg_message_news(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)

        con = sqlite3.connect("my.db")

        cursor = con.cursor()

        cursor.execute("SELECT user_id FROM users")

        records = cursor.fetchall()

        for us in records:
            try:
                sti = open('ben3.webp', 'rb')
                bot.send_sticker(us[0], sti)
                bot.send_message(us[0], mess)
            except:
                pass
        con.close()


@bot.message_handler(func=lambda message: message.text == "‚òÄ–ü–æ–≥–æ–¥–∞‚òÄ" and message.chat.type == 'private')
def weather1(message):
    location = '–û–¥–µ—Å—Å–∞'
    complete_api_link = "https://api.openweathermap.org/data/2.5/weather?q=odessa&appid=5cbeda47b8c5859f4bece2e13a11b5ba&lang=ru"
    api_link = requests.get(complete_api_link)
    api_data = api_link.json()

    temp_city = ((api_data['main']['temp']) - 273.15)
    weather_desc = api_data['weather'][0]['description']
    hmdt = api_data['main']['humidity']
    wind_spd = api_data['wind']['speed']

    round(temp_city)
    bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ –û–î–ï–°–°–ê".format(location.upper()), reply_markup=markup)
    bot.send_message(message.chat.id, "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞              : {:.0f} ¬∞C ".format(temp_city), reply_markup=markup)
    bot.send_message(message.chat.id, "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã    : " + weather_desc, reply_markup=markup)
    bot.send_message(message.chat.id, "–í–ª–∞–∂–Ω–æ—Å—Ç—å                 : " + str(hmdt) + "%", reply_markup=markup)
    bot.send_message(message.chat.id, "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞         : " + str(wind_spd) + "–∫–º/—á", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ê–ú201" and message.chat.type == 'private')
def profilee5(message):
    nums = int(datetime.utcnow().isocalendar()[1])

    t = time(9, 00, 00).strftime("%H:%M:%S")
    z = datetime.now().strftime("%H:%M:%S")

    date = datetime.today().isoweekday()

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "–≠—Ç–æ –ø–∞—Ä–Ω–∞—è –Ω–µ–¥–µ–ª—è")
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ–ø–∞—Ä–Ω–∞—è –Ω–µ–¥–µ–ª—è")

    if date == 1 and z < t:
        profile(message)
    elif date == 2 and z < t:
        profile1(message, nums)
    elif date == 3 and z < t:
        profile2(message)
    elif date == 4 and z < t:
        profile3(message, nums)
    elif date == 5 and z < t:
        profile4(message, nums)
    elif date == 1 and z > t:
        profile1(message, nums)
    elif date == 2 and z > t:
        profile2(message)
    elif date == 3 and z > t:
        profile3(message, nums)
    elif date == 4 and z > t:
        profile4(message, nums)
    elif date == 5 and z > t:
        profile(message)
    elif date == 6 or date == 7:
        profile(message)


def profile(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|3.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile1(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profile4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 201")
def timetable(message):
    nums = int(datetime.utcnow().isocalendar()[1])

    profil(message)
    profil1(message, nums)
    profil2(message)
    profil3(message, nums)
    profil4(message, nums)

def profil(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|3.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil1(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


def profil4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup7, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ê–ú202" and message.chat.type == 'private')
def profile5(message):
    t = time(9, 00, 00).strftime("%H:%M:%S")
    z = datetime.now().strftime("%H:%M:%S")

    nums = int(datetime.utcnow().isocalendar()[1])
    print(nums)

    print(t)
    print(z)
    if z > t:
        print("zawtra")
    else:
        print("segodnya")

    date = datetime.today().isoweekday()

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, "–≠—Ç–æ –ø–∞—Ä–Ω–∞—è –Ω–µ–¥–µ–ª—è")
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ–ø–∞—Ä–Ω–∞—è –Ω–µ–¥–µ–ª—è")

    if date == 1 and z < t:
        prfile(message)
    elif date == 2 and z < t:
        prfile1(message, nums)
    elif date == 3 and z < t:
        prfile2(message)
    elif date == 4 and z < t:
        prfile3(message, nums)
    elif date == 5 and z < t:
        prfile4(message, nums)
    elif date == 1 and z > t:
        prfile1(message, nums)
    elif date == 2 and z > t:
        prfile2(message)
    elif date == 3 and z > t:
        prfile3(message, nums)
    elif date == 4 and z > t:
        prfile4(message, nums)
    elif date == 5 and z > t:
        prfile(message)
    elif date == 6 or date == 7:
        prfile(message)


def prfile(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|3.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfile1(message, nums):
    bot.send_message(message.chat.id, "*–í–¢–û–†–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")

    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfile2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfile3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–°–ü–ó                | –õ–ê–ë |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–°–ü–ó                | –õ–ê–ë |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfile4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ü–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ 202")
def timetable(message):
    nums = int(datetime.utcnow().isocalendar()[1])

    prfil(message)
    prfil1(message, nums)
    prfil2(message)
    prfil3(message, nums)
    prfil4(message, nums)


def prfil(message):
    bot.send_message(message.chat.id, """<pre>
+---------------------------+
|        –ü–û–ù–ï–î–ï–õ–¨–ù–ò–ö        |
+---------------------+-----+
|          –ü–ê–†–´       | –¢–ò–ü |
+---------------------+-----+
|1.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ï–ö |
|2.–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏  | –õ–ê–ë |
|3.–¢–µ–æ—Ä–∏—è –ø—Ä–æ—ç–∫—Ç. –≠–í–ú | –õ–ê–ë |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfil1(message, nums):
    bot.send_message(message.chat.id, "*–í–¢–û–†–ù–ò–ö*", reply_markup=markup7, parse_mode="Markdown")

    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–°–ü–ó                | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")

    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –í–¢–û–†–ù–ò–ö          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ê–ë |
|2.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfil2(message):
    bot.send_message(message.chat.id, """<pre>
+----------------------------+
|           –°–†–ï–î–ê            |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–í—ã–±–æ—Ä—á–∞—è –¥–∏—Å—Ü.      | –ü–†  |
|2.–°–ü–ó                 | –õ–ï–ö |
|3.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ï–ö |
|4.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç    |  -  |
+----------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfil3(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –ü–†  |
|4.–°–ü–ó                | –õ–ê–ë |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ß–ï–¢–í–ï–†–ì          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–°–ü–ó                | –õ–ê–ë |
|2.–§–∏–Ω. –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å   | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ê–ë |
|4.–°–ü–ó                | –õ–ê–ë |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")


def prfil4(message, nums):
    if (nums % 2) == 0:
        bot.send_message(message.chat.id, """<pre>
+---------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê          |
+---------------------+-----+
|         –ü–ê–†–´        | –¢–ò–ü |
+---------------------+-----+
|1.–ü–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç   |  -  |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã    | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏         | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞              |  -  |
+---------------------+-----+
</pre>""", reply_markup=markup9, parse_mode="HTML")
    else:
        bot.send_message(message.chat.id, """<pre>
+----------------------------+
|          –ü–Ø–¢–ù–ò–¶–ê           |
+----------------------+-----+
|         –ü–ê–†–´         | –¢–ò–ü |
+----------------------+-----+
|1.–ü—Ä–æ–≥—Ä–∞–º–º. –º–æ–±. —É—Å—Ç—Ä.| –õ–ê–ë |
|2.–í—ã—á–∏—Å–ª. —Å–∏—Å—Ç–µ–º—ã     | –õ–ï–ö |
|3.–ö–æ–º–ø. —Å–µ—Ç–∏          | –õ–ï–ö |
|4.–§–∏–∑—Ä–∞               |  -  |
+---------------------+------+
</pre>""", reply_markup=markup9, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "üìö–ü–∞—Ä—ãüìö" and message.chat.type == 'private')
def par(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    user_id = message.from_user.id

    cursor.execute(f"SELECT user_id FROM users_201 WHERE user_id = {user_id}")
    data = cursor.fetchone()

    if str(user_id) in str(data):
        profilee5(message)

    cursor.execute(f"SELECT user_id FROM users_202 WHERE user_id = {user_id}")
    data = cursor.fetchone()

    if str(user_id) in str(data):
        profile5(message)


    # for i in am201:
        # if str(user_id) == i:
            # profilee5(message)

    # for i in am202:
        # if str(user_id) == i:
            # profile5(message)


@bot.message_handler(func=lambda message: message.text == "üé≤–ù–∞–π—Ç–∏ –∂–µ—Ä—Ç–≤—Éüé≤" and message.chat.type == 'private')
def profile6(message):
    rand = ["–ê–≤–¥–µ–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –û–ª–µ–≥–æ–≤–∏—á", "–ê—Ä—É—Ç—é–Ω–æ–≤ –ê—Ä—Ç—ë–º –ê—Ä—Ç—É—Ä–æ–≤–∏—á", "–ë–µ–ª—å—á–∏–∫ –ö–∏—Ä–∏–ª–ª –ë–æ—Ä–∏—Å–æ–≤–∏—á",
            "–î–µ–º–∏–¥–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á", "–ï–º–µ—Ü –ê–Ω–¥—Ä–µ–π –í–∏—Ç–∞–ª—å–µ–≤–∏—á", "–ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á",
            "–ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –°–µ—Ä–≥–µ–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á", "–ú–∏—Ö–æ–≤ –ê–Ω–¥—Ä–µ–π –ò–≥–æ—Ä–µ–≤–∏—á", "–û—Ä–ª–æ–≤ –†–æ–º–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á",
            "–°–≤–æ–±–æ–¥–∞ –¢–∏–º—É—Ä –Æ—Ä—å–µ–≤–∏—á", "–°–º–∞–ª—å –ú–∞–∫—Å–∏–º –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á", "–ß–µ—Ä–Ω—ã—Ö –ö–∏—Ä–∏–ª–ª –ú–∏—Ö–∞–π–ª–æ–≤–∏—á", "–ß—É–º–∞–∫ –ú–∞–∫—Å–∏–º –ê–ª–µ–∫—Å–µ–µ–≤–∏—á",
            "–Ø–∫–æ–≤–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á", "–î–µ–Ω–∏—Å—é–∫ –î–∏–∞–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞"]
    sti = open('sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, random.SystemRandom().choice(rand))


@bot.message_handler(func=lambda message: message.text == "üôé‚Äç‚ôÇ–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤üôç‚Äç‚ôÄ" and message.chat.type == 'private')
def profile7(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!", reply_markup=markup2)


@bot.message_handler(func=lambda message: message.text == "‚åõ–ó–≤–æ–Ω–∫–∏‚åõ" and message.chat.type == 'private')
def profile9(message):
    bot.send_message(message.chat.id, """<pre>
+-----------------------------+
|           –ó–í–û–ù–ö–ò            |
+--------------+--------------+
| 1-—è –ø–æ–ª—É–ø–∞—Ä–∞ | 2-—è –ø–æ–ª—É–ø–∞—Ä–∞ |        
+--------------+-------+------+
|1. 8:00-8:45  |   8:50-9:35  |
|2. 9:50-10:35 |  10:40-11:25 |
|3.11:40-12:25 |  12:30-13:15 |        
|4.13:30-14:15 |  14:20-15:05 |             
+--------------+--------------+
    </pre>""", reply_markup=markup, parse_mode="HTML")


@bot.message_handler(func=lambda message: message.text == "–ê–ú-201" and message.chat.type == 'private')
def stud(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã –ê–ú-201: \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "1 –ê–≤–¥–µ–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –û–ª–µ–≥–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "2 –ê—Ä—É—Ç—é–Ω–æ–≤ –ê—Ä—Ç—ë–º –ê—Ä—Ç—É—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "3 –ë–µ–ª—å—á–∏–∫ –ö–∏—Ä–∏–ª–ª –ë–æ—Ä–∏—Å–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "4 –î–µ–º–∏–¥–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "5 –ï–º–µ—Ü –ê–Ω–¥—Ä–µ–π –í–∏—Ç–∞–ª—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "6 –ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "7 –ú–∏—Ö–∞–π–ª–µ–Ω–∫–æ –°–µ—Ä–≥–µ–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "8 –ú–∏—Ö–æ–≤ –ê–Ω–¥—Ä–µ–π –ò–≥–æ—Ä–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "9 –û—Ä–ª–æ–≤ –†–æ–º–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "10 –°–≤–æ–±–æ–¥–∞ –¢–∏–º—É—Ä –Æ—Ä—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "11 –°–º–∞–ª—å –ú–∞–∫—Å–∏–º –ê–Ω–∞—Ç–æ–ª—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "12 –ß–µ—Ä–Ω—ã—Ö –ö–∏—Ä–∏–ª–ª –ú–∏—Ö–∞–π–ª–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "13 –ß—É–º–∞–∫ –ú–∞–∫—Å–∏–º –ê–ª–µ–∫—Å–µ–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "14 –Ø–∫–æ–≤–µ–Ω–∫–æ –î–º–∏—Ç—Ä–∏–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "15 –î–µ–Ω–∏—Å—é–∫ –î–∏–∞–Ω–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–Ω–∞\n", reply_markup=markup2)


@bot.message_handler(func=lambda message: message.text == "–ê–ú-202" and message.chat.type == 'private')
def stud1(message):
    bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø—ã –ê–ú-202: \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "1 –ë–µ–∑—É–≥–ª–∞—è –ê–ª–∏–Ω–∞ –ò–≥–æ—Ä—å–µ–≤–Ω–∞\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "2 –ì–∞–≤—Ä–∏–ª–æ–≤ –ù–∏–∫–∏—Ç–∞ –î–º–∏—Ç—Ä–∏–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "3 –î–∏–º–∏—Ç—Ä–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–∞—Ä—á–µ–ª–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "4 –ö–æ—á–∫–æ–≤ –†–æ–º–∞–Ω –ë–æ—Ä–∏—Å–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "5 –ö—Ä–∏–≤–æ—Ä—É—á–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "6 –ö—É—Ä—É—á –ù–∏–∫–∏—Ç–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "7 –°–∞–≤—á–µ–Ω–∫–æ –î–µ–Ω–∏—Å –í–∞–¥–∏–º–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "8 –°–∞–∫–∞–ª –¢–∏–º–æ—Ñ–µ–π –Æ—Ä—å–µ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "9 –Ø–Ω—á—É–∫ –í–ª–∞–¥–∏–º–∏—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "10 –ï–∫—Å–∞—Ä–æ–≤ –ü–∞–≤–µ–ª \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "11 –§–µ–¥—á—É–∫ –ï–≤–≥–µ–Ω \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "12 –°–µ—Ä–æ–æ—á–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "13 –ë–æ–Ω–¥–∞—Ä–µ–Ω–∫–æ –ò–ª—å—è\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "14 –°—Ç–∞–¥–Ω–∏–∫ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "15 –®–æ—Å—Ç–∞–∫ –Ø—Ä–æ—Å–ª–∞–≤\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "16 –¢–∞—Ä–∞—Å–µ–Ω–∫–æ –ê–Ω–¥—Ä–µ–π \n", reply_markup=markup2)
    bot.send_message(message.chat.id, "17 –ë–∞–±–∏—á –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "18 –¢–∫–∞—á—ë–≤–∞ –¢–∞—Ç—å—è–Ω–∞\n", reply_markup=markup2)
    bot.send_message(message.chat.id, "19 –°–∏–≤–∞–∫ –î–º–∏—Ç—Ä–∏–π\n", reply_markup=markup2)


@bot.message_handler(commands=["add_dz_201"])
def admin_201(message):
    user_id = message.from_user.id

    if str(user_id) == admin_max:
        message_send_dz(message)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def message_send_dz(message):
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –î–ó –∏ –ø—Ä–∏ —ç—Ç–æ–º —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!")
    bot.send_message(message.chat.id, "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ close")
    bot.register_next_step_handler(message, reg_message1)


def reg_message1(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
        file = open('dz201.txt', 'a', -1, 'utf-8')
        read = file.write(mess + ' (' + '‚è±' + str(datetime.now().date()) + '‚è±)\n')
        file.close()

        send_dz(message)


def send_dz(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute("SELECT user_id FROM users_201")

    records = cursor.fetchall()

    for us in records:
        try:
            bot.send_message(us[0], "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ üñ•–î/–óüñ•")
        except:
            pass
    con.close()


@bot.message_handler(commands=["add_dz_202"])
def admin_202(message):
    user_id = message.from_user.id

    if str(user_id) == admin_max or str(user_id) == admin_alina or str(user_id) == admin_vova:
        message_send_dz_202(message)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–º–∞–Ω–¥—ã!")


def message_send_dz_202(message):
    bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –î–ó –∏ –ø—Ä–∏ —ç—Ç–æ–º —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –ø—Ä–µ–¥–º–µ—Ç!")
    bot.send_message(message.chat.id, "–î–ª—è –æ—Ç–º–µ–Ω—ã –Ω–∞–ø–∏—à–∏—Ç–µ close")
    bot.register_next_step_handler(message, reg_message_202)


def reg_message_202(message):
    global mess
    mess = message.text
    if mess == "close":
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup)
        file = open('dz202.txt', 'a', -1, 'utf-8')
        read = file.write(mess + ' (' + '‚è±' + str(datetime.now().date()) + '‚è±)\n')
        file.close()

        send_dz_202(message)


def send_dz_202(message):
    con = sqlite3.connect("my.db")
    cursor = con.cursor()

    cursor.execute("SELECT user_id FROM users_202")

    records = cursor.fetchall()

    for us in records:
        try:
            bot.send_message(us[0], "–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ä–∞–∑–¥–µ–ª–µ üñ•–î/–óüñ•")
        except:
            pass
    con.close()


@bot.message_handler(func=lambda message: message.text == "–Ø –Ω–µ –∑–Ω–∞—é –ø–∞—Ä–æ–ª—å" and message.chat.type == 'private')
def help_pass(message):
    bot.send_message(message.chat.id, "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–æ–º, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è.", reply_markup=markup11)
    send_to_admin_mess(message)


def send_to_admin_mess(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É")
    bot.register_next_step_handler(message, reg_mess_admin)


def reg_mess_admin(message):
    global mess
    mess = message.text
    user_name = message.from_user.username
    bot.send_message(message.chat.id, "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", reply_markup=markup11)
    bot.send_message(admin_max, "–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è" + " –æ—Ç: " + str(user_name) + "\n" + mess, reply_markup=markup13)
    send_welcome(message)


@bot.message_handler(func=lambda message: message.text == "–û–¢–ü–†–ê–í–ò–¢–¨" and message.chat.type == 'private')
def solution(message):
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
    bot.register_next_step_handler(message, solution_send)


def solution_send(message):
    global mess
    mess = message.text
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø!", reply_markup=markup)
    bot.send_message(mess, "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã—Ç! \n –ü–∞—Ä–æ–ª—å: QWERTY20X", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == "–ù–ï –û–¢–ü–†–ê–í–õ–Ø–¢–¨" and message.chat.type == 'private')
def solution2(message):
    bot.send_message(message.chat.id, "–£–∫–∞–∂–∏—Ç–µ id –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
    bot.register_next_step_handler(message, solution_no_send)


def solution_no_send(message):
    global mess
    mess = message.text
    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ!", reply_markup=markup)
    bot.send_message(mess, "–î–æ—Å—Ç—É–ø –∑–∞–∫—Ä—ã—Ç!", reply_markup=markup15)


def checking():
    now = dt.datetime.now()
    global status_1, status_2, status_3, status_4, status_5
    nums = int(datetime.utcnow().isocalendar()[1])
    date = datetime.today().isoweekday()

    con = sqlite3.connect("my.db")
    cursor = con.cursor()
    user_id = message.from_user.id

    cursor.execute(f"SELECT user_id FROM users_201 WHERE user_id = {user_id}")
    data_1 = cursor.fetchone()

    cursor.execute(f"SELECT user_id FROM users_202 WHERE user_id = {user_id}")
    data_2 = cursor.fetchone()

    early_par = time.fromisoformat('04:50:00')
    par_1_s = time.fromisoformat('05:00:00')
    par_1_e = time.fromisoformat('06:35:00')

    par_2_s = time.fromisoformat('06:50:00')
    par_2_e = time.fromisoformat('08:25:00')

    par_3_s = time.fromisoformat('08:40:00')
    par_3_e = time.fromisoformat('10:15:00')

    par_4_s = time.fromisoformat('10:30:00')
    par_4_e = time.fromisoformat('12:05:00')
    tm_now = now.time()

    if user_id in data_1:
        if nums % 2 == 0:
            if date == 1:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/dVPEBXb")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 2:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 3:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 4:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –§–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\n\nhttps://cutt.ly/pVPYwhC")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 5:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/xVPYbnP")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
        else:
            if date == 1:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/dVPEBXb")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 2:
                if par_1_s > tm_now > early_par and not status_1:
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/fVPRKfC")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 3:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 4:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –§–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\n\nhttps://cutt.ly/pVPYwhC")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 5:
                if par_1_s > tm_now > early_par and not status_1:
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_max, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/xVPYbnP")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
    elif user_id in data_2:
        if nums % 2 == 0:
            if date == 1:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/dVPEBXb")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 2:
                if par_1_s > tm_now > early_par and not status_1:
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova,
                                     "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 3:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova,
                                     "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova,
                                     "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 4:
                if par_1_s > tm_now > early_par and not status_1:
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –§–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\n\nhttps://cutt.ly/pVPYwhC")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 5:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova,
                                     "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/xVPYbnP")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
        else:
            if date == 1:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/dVPEBXb")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–µ–æ—Ä–∏—é –ø—Ä–æ—ç–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≠–í–ú\n\nhttps://cutt.ly/lVPEADJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 2:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova,
                                     "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/fVPRKfC")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 3:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova,
                                     "–°–µ–π—á–∞—Å –ø–∞—Ä–∞ –ø–æ –≤—ã–±–æ—Ä—á–µ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, —Å–æ–æ–±—â–∏—Ç–µ –∞–¥–º–∏–Ω—É (@programuller) –æ —Å—Å—ã–ª–∫–∞—Ö "
                                     "–Ω–∞ –¥—Ä—É–≥–∏–µ "
                                     "–¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã\n–°—Å—ã–ª–∫–∞ –Ω–∞ –≠—Å—Ç–µ—Ç–∏–∫—É\n\nhttps://cutt.ly/KVSesN4")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova,
                                     "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 4:
                if par_1_s > tm_now > early_par and not status_1:
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –§–∏–Ω–∞–Ω—Å–æ–≤—É—é –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å\n\nhttps://cutt.ly/pVPYwhC")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –°–ü–ó\n\nhttps://cutt.ly/3VPR831")
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False
            elif date == 5:
                if par_1_s > tm_now > early_par and not status_1:
                    bot.send_message(admin_vova,
                                     "–°—Å—ã–ª–∫–∞ –Ω–∞ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤\n\nhttps://cutt.ly/aVPTiqJ")
                    status_1 = True
                elif par_2_s > tm_now > par_1_e and not status_2:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã\n\nhttps://cutt.ly/cVPYhMS")
                    status_2 = True
                elif par_3_s > tm_now > par_2_e and not status_3:
                    bot.send_message(admin_vova, "–°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ —Å–µ—Ç–∏\n\nhttps://cutt.ly/xVPYbnP")
                    status_3 = True
                elif par_4_s > tm_now > par_3_e and not status_4:
                    status_4 = True
                elif tm_now > par_4_e:
                    status_1 = False
                    status_2 = False
                    status_3 = False
                    status_4 = False


def starting_checking():
    schedule.every(2).minutes.do(checking)

    while True:
        schedule.run_pending()
        tm.sleep(1)


def main():
    p = multiprocessing.Process(target=starting_checking, args=())
    p.start()
    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()
